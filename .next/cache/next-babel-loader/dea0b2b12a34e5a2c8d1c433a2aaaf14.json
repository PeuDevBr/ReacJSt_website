{"ast":null,"code":"var _classCallCheck = require(\"/home/peu/documentos/peudevbr/react/ReactJS_website/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/peu/documentos/peudevbr/react/ReactJS_website/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/home/peu/documentos/peudevbr/react/ReactJS_website/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/home/peu/documentos/peudevbr/react/ReactJS_website/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/home/peu/documentos/peudevbr/react/ReactJS_website/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/peu/documentos/peudevbr/react/ReactJS_website/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\n\nvar _jsxFileName = \"/home/peu/documentos/peudevbr/react/ReactJS_website/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  var input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  var output = convert(input);\n  var rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nvar TemperatureInput = /*#__PURE__*/function (_React$Component) {\n  \"use strict\";\n\n  _inherits(TemperatureInput, _React$Component);\n\n  var _super = _createSuper(TemperatureInput);\n\n  function TemperatureInput(props) {\n    var _this;\n\n    _classCallCheck(this, TemperatureInput);\n\n    _this = _super.call(this, props);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TemperatureInput, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.props.onTemperatureChange(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = this.props.temperature;\n      var scale = this.props.scale;\n      return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"legend\", {\n          children: [\"Enter temperature in \", scaleNames[scale], \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"input\", {\n          value: temperature,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return TemperatureInput;\n}(React.Component);\n\nvar Calculator = /*#__PURE__*/function (_React$Component2) {\n  \"use strict\";\n\n  _inherits(Calculator, _React$Component2);\n\n  var _super2 = _createSuper(Calculator);\n\n  function Calculator(props) {\n    var _this2;\n\n    _classCallCheck(this, Calculator);\n\n    _this2 = _super2.call(this, props);\n    _this2.handleCelsiusChange = _this2.handleCelsiusChange.bind(_assertThisInitialized(_this2));\n    _this2.handleFahrenheitChange = _this2.handleFahrenheitChange.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      temperature: '',\n      scale: 'c'\n    };\n    return _this2;\n  }\n\n  _createClass(Calculator, [{\n    key: \"handleCelsiusChange\",\n    value: function handleCelsiusChange(temperature) {\n      this.setState({\n        scale: 'c',\n        temperature: temperature\n      });\n    }\n  }, {\n    key: \"handleFahrenheitChange\",\n    value: function handleFahrenheitChange(temperature) {\n      this.setState({\n        scale: 'f',\n        temperature: temperature\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scale = this.state.scale;\n      var temperature = this.state.temperature;\n      var celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n      var fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n      return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(TemperatureInput, {\n          scale: \"c\",\n          temperature: celsius,\n          onTemperatureChange: this.handleCelsiusChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(TemperatureInput, {\n          scale: \"f\",\n          temperature: fahrenheit,\n          onTemperatureChange: this.handleFahrenheitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(BoilingVerdict, {\n          celsius: parseFloat(celsius)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nReactDOM.render( /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["/home/peu/documentos/peudevbr/react/ReactJS_website/pages/index.js"],"names":["scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","BoilingVerdict","props","TemperatureInput","handleChange","bind","e","onTemperatureChange","target","value","scale","React","Component","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["const scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n  }\n  return <p>The water would not boil.</p>;\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"script"}